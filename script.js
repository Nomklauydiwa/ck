const messages = [
  "‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ú‡∏°‡∏ô‡∏±‡πà‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡πá‡πÅ‡∏Å‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏ä‡∏°.‡∏Å‡∏ß‡πà‡∏≤\n‡∏â‡∏∞‡∏ô‡∏±‡πâ‡∏ô‡∏î‡∏π‡πÉ‡∏´‡πâ‡∏à‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏¢",
  "‡∏ú‡∏°‡∏Ñ‡∏¥‡∏î‡∏ß‡πà‡∏≤‡∏ú‡∏°‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏à‡∏∞‡∏ö‡∏≠‡∏Å‡∏Ñ‡∏∏‡∏ì",
  "‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏Ñ‡∏¥‡∏î‡∏¢‡∏±‡∏á‡πÑ‡∏á‡∏ô‡∏∞",
  "‡πÅ‡∏ï‡πà‡∏ß‡πà‡∏≤‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ú‡∏°‡∏≠‡∏¢‡∏≤‡∏Å‡∏à‡∏∞‡∏ö‡∏≠‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠...",
  "‡πÑ‡∏≠‡πÅ‡∏°‡∏ß‡∏≠‡πâ‡∏ß‡∏ô‡∏ô‡∏ô‡∏ô‡∏ô"
];

let current = 0;
const box = document.getElementById("messageBox");
const btn = document.getElementById("sakuraButton");
const prevBtn = document.getElementById("prevButton");
const nextBtn = document.getElementById("nextButton");

let typingTimeout;
let isTyping = false;

const colors = ['#a0507a', '#c0739e', '#dca9c8', '#eec9dd', '#f7e4f1'];

const typeSound = document.getElementById("typeSound");

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ö‡∏ö typewriter effect ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏à‡∏¥‡πâ‡∏°‡πÜ
function typeWriter(text, i = 0) {
  if (i === 0) box.textContent = "";
  if (i < text.length) {
    box.textContent += text.charAt(i);
    playTypeSound();
    typingTimeout = setTimeout(() => typeWriter(text, i + 1), 50);
  } else {
    isTyping = false;
    if(current === messages.length - 1) {
      createLargeSakura(10);
      createBurstSakura(30);
      createBurstHeart(15);
    }
  }
}

function playTypeSound() {
  typeSound.currentTime = 0;
  typeSound.volume = 0.12;
  typeSound.play().catch(() => {});
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏∏‡πà‡∏°
function showMessage(index) {
  if (index < 0) index = 0;
  if (index >= messages.length) index = messages.length - 1;
  isTyping = true;
  clearTimeout(typingTimeout);
  typeWriter(messages[index]);
  box.style.color = colors[index % colors.length];
  box.style.animation = "fadeInSlide 0.6s ease forwards";
  current = index;
  
  nextBtn.disabled = current === messages.length - 1;
  prevBtn.disabled = current === 0;
}

// ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏µ‡∏ö‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞ ‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏°‡∏µ‡∏Å‡∏•‡∏µ‡∏ö‡∏û‡∏∏‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏û‡∏∏‡πà‡∏á + ‡πÅ‡∏™‡∏á‡∏ß‡∏π‡∏ö‡∏õ‡∏∏‡πà‡∏°
btn.addEventListener("click", () => {
  if (!isTyping) {
    flashButton(btn);
    createBurstSakura();
    createBurstHeart();
    playSakuraSound();
  }
});

// ‡∏õ‡∏∏‡πà‡∏°‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
nextBtn.addEventListener("click", () => {
  if (current < messages.length - 1 && !isTyping) {
    showMessage(current + 1);
  }
});

// ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
prevBtn.addEventListener("click", () => {
  if (current > 0 && !isTyping) {
    showMessage(current - 1);
  }
});

// ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏™‡∏á‡∏ß‡∏π‡∏ö‡∏õ‡∏∏‡πà‡∏°
function flashButton(button) {
  button.classList.add("flash");
  setTimeout(() => {
    button.classList.remove("flash");
  }, 400);
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏µ‡∏ö‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞‡∏û‡∏∏‡πà‡∏á (‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÑ‡∏î‡πâ)
function createBurstSakura(count = 10) {
  for (let i = 0; i < count; i++) {
    const burst = document.createElement("div");
    burst.classList.add("sakura-burst");
    burst.textContent = "üå∏";

    const rect = btn.getBoundingClientRect();
    burst.style.left = rect.left + rect.width / 2 + "px";
    burst.style.top = rect.top + rect.height / 2 + "px";

    document.body.appendChild(burst);

    const x = (Math.random() - 0.5) * 200;
    const y = (Math.random() - 1) * 200;
    burst.style.transform = `translate(${x}px, ${y}px)`;
    burst.style.opacity = 0;

    setTimeout(() => burst.remove(), 1000);
  }
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏û‡∏∏‡πà‡∏á (‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÑ‡∏î‡πâ)
function createBurstHeart(count = 5) {
  for (let i = 0; i < count; i++) {
    const heart = document.createElement("div");
    heart.classList.add("heart-burst");
    heart.textContent = "‚ù§Ô∏è";

    const rect = btn.getBoundingClientRect();
    heart.style.left = rect.left + rect.width / 2 + "px";
    heart.style.top = rect.top + rect.height / 2 + "px";

    document.body.appendChild(heart);

    const x = (Math.random() - 0.5) * 200;
    const y = (Math.random() - 1) * 200;
    heart.style.transform = `translate(${x}px, ${y}px)`;
    heart.style.opacity = 0;

    setTimeout(() => heart.remove(), 1000);
  }
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏µ‡∏ö‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞‡πÉ‡∏´‡∏ç‡πà‡∏•‡∏≠‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏à‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
function createLargeSakura(count = 5) {
  for (let i = 0; i < count; i++) {
    const sakura = document.createElement("div");
    sakura.classList.add("sakura-large");
    sakura.textContent = "üå∏";

    sakura.style.left = (window.innerWidth * Math.random()) + "px";
    sakura.style.top = (window.innerHeight - 100) + "px";

    document.body.appendChild(sakura);

    setTimeout(() => sakura.remove(), 2000);
  }
}

// ‡∏Å‡∏•‡∏µ‡∏ö‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞‡∏£‡πà‡∏ß‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢ ‡πÜ
function createSakura() {
  const sakura = document.createElement("div");
  sakura.classList.add("sakura-fall");
  sakura.textContent = "üå∏";

  sakura.style.left = Math.random() * 100 + "vw";
  sakura.style.animationDuration = (5 + Math.random() * 5) + "s";

  document.body.appendChild(sakura);

  sakura.addEventListener("animationend", () => {
    sakura.remove();
  });
}

setInterval(createSakura, 500);

// ‡∏Å‡∏•‡∏µ‡∏ö‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞‡∏•‡∏≠‡∏¢‡∏ï‡∏≤‡∏°‡πÄ‡∏°‡∏≤‡∏™‡πå
document.addEventListener("mousemove", e => {
  const sakura = document.createElement("div");
  sakura.classList.add("sakura-follow");
  sakura.textContent = "üå∏";
  sakura.style.left = e.clientX + "px";
  sakura.style.top = e.clientY + "px";

  document.body.appendChild(sakura);

  const moveX = (Math.random() - 0.5) * 100;
  const moveY = (Math.random() - 0.5) * 100;
  sakura.style.transform = `translate(${moveX}px, ${moveY}px)`;
  sakura.style.opacity = 0;

  setTimeout(() => sakura.remove(), 2000);
});

// ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞‡πÄ‡∏ö‡∏≤‡πÜ
function playSakuraSound() {
  const audio = document.getElementById("sakuraSound");
  audio.volume = 0.2;
  audio.currentTime = 0;
  audio.play().catch(() => {});
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
showMessage(current);